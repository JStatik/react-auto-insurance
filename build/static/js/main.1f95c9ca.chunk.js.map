{"version":3,"sources":["components/Header.js","hooks/useForm.js","helpers/isValidQuotationForm.js","helpers/getPercentage.js","components/QuotationForm/MarkSelect.js","components/QuotationForm/ModelSelect.js","components/QuotationForm/BasicCheck.js","components/QuotationForm/CompleteCheck.js","components/QuotationForm/SubmitButton.js","components/QuotationForm/GetQuoteButton.js","components/QuotationForm.js","components/FinalQuotation.js","components/ui/Spinner.js","AutoInsurance.js","index.js"],"names":["StyledHeader","styled","header","StyledH1","h1","Header","title","useForm","initialState","useState","formValues","setFormValues","handleChange","event","target","name","value","reset","newState","isValidQuotationForm","mark","model","plan","trim","length","validator","isEmpty","msgErrorQuotation","isValid","isAlpha","isNaN","isInt","min","max","allow_leading_zeroes","isNumeric","getPercentage","percentageMark","percentageModel","Date","getFullYear","totalPercentage","MarkSelect","disabled","className","onChange","defaultValue","ModelSelect","BasicCheck","htmlFor","type","id","checked","CompleteCheck","SubmitButton","StyledContainerButton","div","GetQuoteButton","handleClick","onClick","StyledForm","form","StyledError","p","QuotationForm","setLoading","setDataQuotation","msgError","setMsgError","setDisabled","autoComplete","onSubmit","preventDefault","markEscaped","escape","modelEscaped","planEscaped","setTimeout","dataQuotation","quotation","finalQuotation","parseFloat","toFixed","StyledFinalQuotation","FinalQuotation","Spinner","StyledMainContainer","StyledQuotationContainer","AutoInsurance","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f95c9ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledHeader = styled.header`\r\n    color: #fff;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n    font-family: 'Slabo 27px', serif;\r\n    font-size: 2rem;\r\n    margin: 0;\r\n`;\r\n\r\nconst Header = ( { title } ) => {\r\n    return (\r\n        <StyledHeader>\r\n            <StyledH1>{ title }</StyledH1>\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleChange = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleChange, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidQuotationForm = ( mark, model, plan ) => {\r\n    if( mark.trim().length < 4 || model.trim().length < 4 || plan.trim().length < 5 ) {\r\n        return {\r\n            msgErrorQuotation: 'Todos los campos son necesarios para la cotizaci칩n.',\r\n            isValid: false\r\n        };\r\n    } else if( validator.isEmpty( mark ) || validator.isEmpty( model ) || validator.isEmpty( plan ) ) {\r\n        return {\r\n            msgErrorQuotation: 'Todos los campos son necesarios para la cotizaci칩n.',\r\n            isValid: false\r\n        };\r\n    } else if ( !validator.isAlpha( mark, [ 'es-ES' ] ) || !validator.isAlpha( plan, [ 'es-ES' ] ) ) {\r\n        return {\r\n            msgErrorQuotation: 'Los datos ingresados no son v치lidos.',\r\n            isValid: false\r\n        };\r\n    } else if( isNaN( model ) || !validator.isInt( model, { min: 2012, max: 2021, allow_leading_zeroes: false } ) || !validator.isNumeric( model ) ) {\r\n        return {\r\n            msgErrorQuotation: 'Los datos ingresados no son v치lidos.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        msgErrorQuotation: null,\r\n        isValid: true\r\n    };\r\n};\r\n\r\nexport default isValidQuotationForm;\r\n","const getPercentage = ( mark, model, plan ) => {\r\n    let percentageMark;\r\n    let percentagePlan;\r\n    const percentageModel = ( new Date().getFullYear() - model ) * -3;\r\n\r\n    switch( mark ) {\r\n        case 'fiat': percentageMark = 15;\r\n            break;\r\n\r\n        case 'peugeot': percentageMark = 20;\r\n            break;\r\n\r\n        case 'ford': percentageMark = 25;\r\n            break;\r\n\r\n        case 'chevrolet': percentageMark = 30;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    plan === 'basic' ? percentagePlan = 20 : percentagePlan = 50;\r\n\r\n    return {\r\n        totalPercentage: percentageMark + percentageModel + percentagePlan\r\n    };\r\n};\r\n\r\nexport default getPercentage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MarkSelect = ( { mark, handleChange, disabled } ) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <select\r\n                className=\"form-select\"\r\n                name=\"mark\"\r\n                value={ mark }\r\n                onChange={ handleChange }\r\n                disabled={ disabled }\r\n            >\r\n                <option defaultValue>Marca del auto</option>\r\n                <option value=\"chevrolet\">Chevrolet</option>\r\n                <option value=\"fiat\">Fiat</option>\r\n                <option value=\"ford\">Ford</option>\r\n                <option value=\"peugeot\">Peugeot</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nMarkSelect.propTypes = {\r\n    mark: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default MarkSelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModelSelect = ( { model, handleChange, disabled } ) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <select\r\n                className=\"form-select\"\r\n                name=\"model\"\r\n                value={ model }\r\n                onChange={ handleChange }\r\n                disabled={ disabled }\r\n            >\r\n                <option defaultValue>Modelo del auto</option>\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2020\">2020</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2018\">2018</option>\r\n                <option value=\"2017\">2017</option>\r\n                <option value=\"2016\">2016</option>\r\n                <option value=\"2015\">2015</option>\r\n                <option value=\"2014\">2014</option>\r\n                <option value=\"2013\">2013</option>\r\n                <option value=\"2012\">2012</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nModelSelect.propTypes = {\r\n    model: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ModelSelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BasicCheck = ( { plan, handleChange, disabled } ) => {\r\n    return (\r\n        <>\r\n            <label className=\"form-check-label\" htmlFor=\"basic\">B치sico</label>\r\n            <input\r\n                type=\"radio\"\r\n                className=\"form-check-input\"\r\n                id=\"basic\"\r\n                name=\"plan\"\r\n                value=\"basic\"\r\n                checked={ plan === 'basic' }\r\n                onChange={ handleChange }\r\n                disabled={ disabled }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nBasicCheck.propTypes = {\r\n    plan: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default BasicCheck;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CompleteCheck = ( { plan, handleChange, disabled } ) => {\r\n    return (\r\n        <>\r\n            <label className=\"form-check-label\" htmlFor=\"complete\">Completo</label>\r\n            <input\r\n                type=\"radio\"\r\n                className=\"form-check-input\"\r\n                id=\"complete\"\r\n                name=\"plan\"\r\n                value=\"complete\"\r\n                checked={ plan === 'complete' }\r\n                onChange={ handleChange }\r\n                disabled={ disabled }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nCompleteCheck.propTypes = {\r\n    plan: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default CompleteCheck;\r\n","import React from 'react';\r\n\r\nconst SubmitButton = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n                Cotizar\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledContainerButton = styled.div`\r\n    font-family: 'Slabo 27px', serif;\r\n`;\r\n\r\nconst GetQuoteButton = ( { handleClick } ) => {\r\n    return (\r\n        <StyledContainerButton className=\"mt-3 text-center\">\r\n            <button className=\"btn btn-danger\" onClick={ handleClick }>\r\n                Volver a cotizar\r\n            </button>\r\n        </StyledContainerButton>\r\n    );\r\n};\r\n\r\nGetQuoteButton.propTypes = {\r\n    handleClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GetQuoteButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport validator from 'validator';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidQuotationForm from '../helpers/isValidQuotationForm';\r\nimport getPercentage from '../helpers/getPercentage';\r\nimport MarkSelect from './QuotationForm/MarkSelect';\r\nimport ModelSelect from './QuotationForm/ModelSelect';\r\nimport BasicCheck from './QuotationForm/BasicCheck';\r\nimport CompleteCheck from './QuotationForm/CompleteCheck';\r\nimport SubmitButton from './QuotationForm/SubmitButton';\r\nimport GetQuoteButton from './QuotationForm/GetQuoteButton';\r\n\r\nconst StyledForm = styled.form`\r\n    font-family: 'Slabo 27px', serif;\r\n`;\r\n\r\nconst StyledError = styled.p`\r\n    color: #990000;\r\n    font-family: 'Slabo 27px', serif;\r\n    font-size: '12px';\r\n    text-align: center;\r\n`; \r\n\r\nconst QuotationForm = ( { setLoading, setDataQuotation } ) => {\r\n    const [ formValues, handleChange, reset ] = useForm( { mark: '', model: '', plan: '' } );\r\n    const { mark, model, plan } = formValues;\r\n\r\n    const [ msgError, setMsgError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        \r\n        const markEscaped = validator.escape( mark );\r\n        const modelEscaped = validator.escape( model );\r\n        const planEscaped = validator.escape( plan );\r\n\r\n        const { msgErrorQuotation, isValid } = isValidQuotationForm( markEscaped, modelEscaped, planEscaped );\r\n        setMsgError( msgErrorQuotation );\r\n\r\n        if( isValid ) {\r\n            setLoading( true );\r\n\r\n            setTimeout( () => {\r\n                const { totalPercentage } = getPercentage( markEscaped, modelEscaped, planEscaped );\r\n\r\n                setDataQuotation( ( dataQuotation => {\r\n                    const { quotation } = dataQuotation;\r\n                    const finalQuotation = quotation + ( quotation * ( totalPercentage / 100 ) );\r\n\r\n                    return {\r\n                        ...dataQuotation,\r\n                        mark: markEscaped,\r\n                        model: modelEscaped,\r\n                        plan: planEscaped,\r\n                        quotation: parseFloat( finalQuotation ).toFixed( 2 )\r\n                    }\r\n                } ) );\r\n\r\n                setLoading( false );\r\n                setDisabled( true );\r\n                reset();\r\n            }, 1500 );\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setDataQuotation( ( dataQuotation => {\r\n            return {\r\n                ...dataQuotation,\r\n                mark: '',\r\n                model: '',\r\n                plan: '',\r\n                quotation: 5000\r\n            }\r\n        } ) );\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { msgError && <StyledError>{ msgError }</StyledError> }\r\n        \r\n            <StyledForm autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                <MarkSelect\r\n                    mark={ mark }\r\n                    handleChange={ handleChange }\r\n                    disabled={ disabled }\r\n                />\r\n\r\n                <ModelSelect\r\n                    model={ model }\r\n                    handleChange={ handleChange }\r\n                    disabled={ disabled }\r\n                />\r\n\r\n                <div className=\"row mb-3 text-center\">\r\n                    <div className=\"col-4\">\r\n                        <label>Tipo de plan:</label>\r\n                    </div>\r\n\r\n                    <div className=\"col-8\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <BasicCheck plan={ plan } handleChange={ handleChange } disabled={ disabled } />\r\n                        </div>\r\n\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <CompleteCheck plan={ plan } handleChange={ handleChange } disabled={ disabled } />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                { !disabled &&  <SubmitButton /> }\r\n            </StyledForm>\r\n\r\n            { disabled && <GetQuoteButton handleClick={ handleClick } /> }\r\n        </>\r\n    );\r\n};\r\n\r\nQuotationForm.propTypes = {\r\n    setLoading: PropTypes.func.isRequired,\r\n    setDataQuotation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default QuotationForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledFinalQuotation = styled.div`\r\n    font-family: 'Slabo 27px', serif;\r\n    margin-top: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst FinalQuotation = ( { mark, model, plan, quotation } ) => {\r\n    return (\r\n        <>\r\n            <StyledFinalQuotation className=\"animate__animated animate__fadeIn\">\r\n                <hr/>\r\n                \r\n                <h3>Cotizaci칩n Final</h3>\r\n\r\n                <ul className=\"bg-warning\">\r\n                    <li>Marca: <span className=\"data-quotation\">{ mark }</span></li>\r\n                    <li>Modelo: <span className=\"data-quotation\">{ model }</span></li>\r\n                    <li>Plan: <span className=\"data-quotation\">{ plan }</span></li>\r\n                </ul>\r\n\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-5 offset-1 mt-3\">\r\n                        <p>TOTAL:</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-5 mt-3 text-success\">\r\n                        <p>$ { quotation }</p>\r\n                    </div>\r\n                </div>\r\n            </StyledFinalQuotation>\r\n        </>\r\n    );\r\n};\r\n\r\nFinalQuotation.propTypes = {\r\n    mark: PropTypes.string.isRequired,\r\n    model: PropTypes.string.isRequired,\r\n    plan: PropTypes.string.isRequired,\r\n    quotation: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FinalQuotation;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n            <hr/>\r\n\r\n            <div className=\"sk-circle\">\r\n                <div className=\"sk-circle1 sk-child\"></div>\r\n                <div className=\"sk-circle2 sk-child\"></div>\r\n                <div className=\"sk-circle3 sk-child\"></div>\r\n                <div className=\"sk-circle4 sk-child\"></div>\r\n                <div className=\"sk-circle5 sk-child\"></div>\r\n                <div className=\"sk-circle6 sk-child\"></div>\r\n                <div className=\"sk-circle7 sk-child\"></div>\r\n                <div className=\"sk-circle8 sk-child\"></div>\r\n                <div className=\"sk-circle9 sk-child\"></div>\r\n                <div className=\"sk-circle10 sk-child\"></div>\r\n                <div className=\"sk-circle11 sk-child\"></div>\r\n                <div className=\"sk-circle12 sk-child\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Header from './components/Header';\r\nimport QuotationForm from './components/QuotationForm';\r\nimport FinalQuotation from './components/FinalQuotation';\r\nimport Spinner from './components/ui/Spinner';\r\n\r\nconst StyledMainContainer = styled.div`\r\n    margin: 0 auto;\r\n    width: 90vw;\r\n`;\r\n\r\nconst StyledQuotationContainer = styled.div`\r\n    background-color: #f2f2f2;\r\n    border-radius: 3px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    width: 80%;\r\n`;\r\n\r\nconst AutoInsurance = () => {\r\n    const [ loading, setLoading ] = useState( false );\r\n\r\n    const [ dataQuotation, setDataQuotation ] = useState( { mark: '', model: '', plan: '', quotation: 5000 } );\r\n    const { mark, model, plan, quotation } = dataQuotation;\r\n\r\n    return (\r\n        <StyledMainContainer>\r\n            <Header title=\"Cotizador de seguros\" />\r\n\r\n            <StyledQuotationContainer>\r\n                <QuotationForm\r\n                    setLoading={ setLoading }\r\n                    setDataQuotation={ setDataQuotation }\r\n                />\r\n\r\n                {\r\n                    loading\r\n                        ? \r\n                    <Spinner />\r\n                        :\r\n                    ( mark !== '' && model !== '' && plan !== '' )\r\n                        &&\r\n                        <FinalQuotation\r\n                            mark={ mark }\r\n                            model={ model }\r\n                            plan={ plan }\r\n                            quotation={ quotation }\r\n                        />\r\n                }\r\n            </StyledQuotationContainer>\r\n        </StyledMainContainer>\r\n    );\r\n};\r\n\r\nexport default AutoInsurance;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'animate.css';\r\nimport './index.css';\r\nimport AutoInsurance from './AutoInsurance';\r\n\r\nReactDOM.render( <AutoInsurance />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}